good <- complete.cases(fullPolData)
polData3 <- polData2[good,]
nobs_val[i] = length(polData3$ID)
}
data.frame(id = idx, nobs = nobs_val )
# return(fullPolData)
}
complete("specdata",1:5)
complete("specdata",1)
complete <-function(directory, idx=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
polData2 = NULL
nobs_val = rep(0,length(idx))
count = 1
for(i in idx){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData3 <- polData2[good,]
nobs_val[count] <- length(polData3$ID)
count <- count + 1
}
data.frame(id = idx, nobs = nobs_val )
# return(fullPolData)
}
complete("specdata",1)
complete("specdata",1:5)
count = 1
idx[count]
count <- count +1
idx[count]
complete <-function(directory, idx=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
polData2 = NULL
nobs_val = rep(0,length(idx))
count = 1
for(i in idx){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
nobs_val[count] <- length(polData$ID)
count <- count + 1
}
data.frame(id = idx, nobs = nobs_val )
# return(fullPolData)
}
complete("specdata",1:5)
complete("specdata",3)
submit
submit()
submit()
submit()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x>5){
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(39)
z <-10
f(3)
rm(z)
f(3)
?corr
?cor
library(nushell)
library(nutshell)
install.packages("nutshell")
library(nutshell)
library(nutshell.bbdb)
library(nutshell.audioscrobbler)
library(nutshell)
birth2006.cln <- birth2006[!is.na(birth2006$WTGAIN) & ]
birth2006.cln <- birth2006[!is.na(birth2006$WTGAIN) & !is.na(birth2006$DBWT) & births2006$DPLURAL == "1 Single" & birth2006$ESTGEST>35, ]
data(birth2006)
data(births2006)
data(dow30)
data(births)
data(births2006
)
data(births2006.idx (births2006.smpl)
)
data(births2006.idx (births2006.smpl)births2006.idx (births2006.smpl)
data(births2006.smpl
)
birth2006.cln <- births2006[!is.na(births2006$WTGAIN) & !is.na(births2006$DBWT) & births2006$DPLURAL == "1 Single" & births2006$ESTGEST>35, ]
births2006 <- data(births2006.smpl)
birth2006.cln <- births2006[!is.na(births2006$WTGAIN) & !is.na(births2006$DBWT) & births2006$DPLURAL == "1 Single" & births2006$ESTGEST>35, ]
head(dow30)
summary(dow30)
directory = "specdata"
source(complete.R)
obs = complete(directory,1:332)
rm(obs)
source("complete.R")
obs = complete(directory,1:332)
obs$nobs[2]
obs$nobs>150
t  <- obs$nobs>150
good <- complete.cases(t)
t[good]
t[T]
rm(t)
obs$nobs>150
obs$nobs[obs$nobs>150]
obs$nobs[obs$nobs>400]
t <- obs$nobs[obs$nobs>400]
rm(t)
t <- obs$id[obs$nobs>400]
count <- 1
count +<- 1
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs.id[obs.nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
}
polCor
}
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs.id[obs.nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
}
polCor
}
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs.id[obs.nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
}
return(polCor)
}
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs.id[obs.nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
return(polCor)
}
cr <- corr("specdata",150)
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs$id[obs.nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
return(polCor)
}
cr <- corr("specdata",150)
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs$id[obs$nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
return(polCor)
}
cr <- corr("specdata",150)
head8cr
head(cr)
summary(cr)
source(corr.R)
source("corr.R")
cr <- corr("specdata",150)
head(cr)
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs$id[obs$nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in length(id_threshold)){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$nitrate,polData$sulfate)
count <- count + 1
}
polCor
}
cr <- corr("specdata",150)
head(cr)
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs$id[obs$nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in id_threshold){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$nitrate,polData$sulfate)
count <- count + 1
}
polCor
}
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
head(cr)
summary(cr)
length(cr)
id_threshold <- obs$id[obs$nobs>threshold]
threshold <- 5000
id_threshold <- obs$id[obs$nobs>threshold]
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs$id[obs$nobs>threshold]
if (is.empty(id_threshold)){
break
}
else{
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in id_threshold){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
polCor
}
}
cr <- corr("specdata",5000)
id_threshold
is.NULL(id_threshold)
length(id_threshold)
!length(id_threshold)
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
obs = complete(directory,1:332)
# finding the index of data whose number of complete observation
# is greater than the given threshold
id_threshold <- obs$id[obs$nobs>threshold]
# computing the correlation of the thresholded data
polCor = rep(0,length(id_threshold))
count <- 1
for(i in id_threshold){
# getting polution data
# formatting id (adding "0" or "00" in front of id)
id_format <- formatC(i,width=3,flag = "0")
fileName <- paste(directory,id_format,sep = "/")
fullName <- paste(fileName,"csv", sep = ".")
fullPolData <- read.csv(fullName)
# removing NA values
good <- complete.cases(fullPolData)
polData <- fullPolData[good,]
polCor[count] <- cor(polData$sulfate,polData$nitrate)
count <- count + 1
}
polCor
}
cr <- corr("specdata",5000)
length(corr)
length(cr)
summary(cr)
submit
submit()
cr <- corr("specdata")
head(cr)
summary(cr)
length(cr)
submit()
submit()
