args("rnorms")
args("rnorm")
rnorm
x <- c(1,3,2,5)
x = c(1,2,3,4)
x
y = c(1,3,4)
y
length(x)
length(y)
x + y
ls
ls()
rm(x,y)
ls()
rm(list=ls())
x = matrx(data = c(1,2,3,4), nrow = 2, ncol = 2)
x = matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
x = matrix(data = c(15,2,43,54), nrow = 2, ncol = 2)
x
c = c(2,7,5)
y = seq(from=4,length = 3,by = 3)
?seq
y
x=y
x/y
x*y
x[2]
x(2)
x[2:3]
x[-2]
x[-c(1,2)]
z = matrix(seq(1,12),4,3)
z
z[3:4,2:3]
z(,1)
z(,1,drop=false)
z(,1,drop=FLASE)
z(,1,drop=FALSE)
z[],1,drop=FALSE]
z[,1,drop=FALSE]
z[,1]
ls()
rm(y)
x = rnorm(50);
y = rnorm(50)
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch = "*",col ="blue")
par(mfrow = c(2,1))
par(mfrow - c(2,1))
par(mfrow = c(2,1))
plot(x,y)
hist(y)
par(mfrow=c(1,1))
getwd()
dir
dir()
x = 1:20
x
c = c(0.5,0.6)
c
x = c(true,false)
x = c(T,F)
x
x = vector("numeric",length = 10)
x
x = 9:29
x
x = (1 +10i, 2 + 4i)
x = c(1 +10i, 2 + 4i)
x
y = c("a", 1.7)
y
y = c(T,2)
y
y = c(F,2)
y = c(F,2)
y
y = c("a",T)
y
y = c(T,"a")
y
x = 0:6
as.numeric(x)
as.logical(x)
as.character(x)
class(x)
as.complex(x)
x = c("a","b","c")
as.numeric(x)
x = list(1,"a",T,1+4i)
x
x = matrix(2,3)
x
dim(x)
matrix(ncol=2,nrow=3)
dim(x)
x=matrix(ncol=2,nrow=3)
dim(x)
x = matrx(1:6,nrow=2,ncol=3)
x = matrix(1:6,nrow=2,ncol=3)
x
dim(x)
m=1:10
dim(m) = c(2,5)
m
x = 1:3
y = 10:12
cbind(x,y)
rbind(x,y)
x = facto(c("yes","no","yes", "no", "yes"))
x = factor(c("yes","no","yes", "no", "yes"))
table(x)
x
x  c(1,2,NA,3,4,5)
x =  c(1,2,NA,3,4,5)
is.na(x)
is,nan(x)
is.nan(x)
x = data.frame(foo=1:4,bar = c(T,T,F,F))
ncol(x)
nrow(x)
x = 1:3
names(x) = c("foo","a","b")
x
dim(x)
names8x
names(x)
x.dim
dim(y)
dim(c)
c = c(1,2,3)
dim(c)
c
y = data.frame(a = 1, b = "a")
dput(y)
x = list(foo=1:4,bar = 0.6)
x[1]
x[[1]]
x$bar
x$foo
swirl()
swirl help
?swirl
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files()
?list.files
args()
args(list.files)
old.dir = getwd
old.dir = getwd()
old.dir <- getwd()
mkdir testdir
mkdir "testdir"
?mkdir
mkdir(testdir)
dir.create(old.dir)
dir.create("testdir")
cd testdir
cd "testdir"
dir.change("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
mytest.R
list.files("mytest.R")
infor()
info()
info()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
dir.create(setwd(dir.create("testdir2")))
dir.create("testdir2")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3",recursive = T)
dir.create("testdir2/testdir3",recursive = True)
dir.create("testdir2/testdir3",recursive = TRUE)
dir.delete("testdir2")
dir.remove("testdir2")
file.delete(testdir2)
file.remove("testdir2")
unlink("testdir2",recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
my_seq = seq(5,10,length = 30)
my_seq <- seq(5,10,length = 30)
length(my_seq)
seq(1,length(my_seq))
1:length(my_seq)
along.with = my_seq
seq(along.with = my_seq)
seq_along(my_seq)
reo(0,times=40)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
library("swirl")
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
tf2<-num_vect>=6
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse= "")
paste(my_char,collapse= " ")
my_name<-c(my_char,"6cyu")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("x","Y","Z"),sep="")
paste(1:3,c("x","Y","Z"),sep="")
paste(1:3, c("x","Y","Z"),sep = "")
paste(1:3, c("x","Y","Z"),sep = " ")
paste(1:3, c("x", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data=NA
my_data<-NA
my_data==NA
sum(my_na)
my_data
1/0
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[x>0]
y[y>0]
x[x>0]
x[!is.na(x)&&x>0]
x[!is.na(x)&x>0]
c(x[3],x[5],x[7])
[c(3,5,7)]
x[c(3,5,7)]
x[0]
x[2000]
x[3000]
x[c(-2.-10)]
x[c(-2,-10)]
x-c(2,10)
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names*vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my-vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
mymatrix2<-matrix(1:20,nrow=4,ncol=5)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(my_matix,patients)
View(mymatrix2)
cbind(my_matrix,patients)
cbind(patients,my_matrix)
my_data<-data.frames(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(ma_data)
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(data.frame)
colnames(my_data)
colnames(my_data)<-cnames
my_data
T==T
TURe==TRUE
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TURE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8 ||6!=8 && 4>3.9
isTRUE(6>4)
isTRUE(NA)
identical("twins","twins"
)
xor(5==6,!FALSE)
ints<-sampel(10)
ints<-samples(10)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
x=4L
class(x)
x = c(4,T)
x
calass(x)
class(x)
x = c(1,3,5)
y = c(3,2,10)
rbind(x,y)
x = list(2,"a","b",T)
x[[2]]
x[2]
x
y = x[[2]]
y
dim(y)
length8(y)
length(y)
z = x[2]
z
dim(z)
length(z)
x = 1:4
y = 2
x+y
x 0 c(17,14,4,,5,13,12,10)
x = c(17,14,4,,5,13,12,10)
x = c(17,14,4,,5,13,12,10)
x = c(17,14,4,5,13,12,10)
x[x>10] =4
x
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
read.csv("X:\Courses\Mathematics\Probability and Statistics\Coursera_RProgramming\Quizes\hw1_data.csv")
read.csv(X:\Courses\Mathematics\Probability and Statistics\Coursera_RProgramming\Quizes\hw1_data.csv)
dir.change(X:\Courses\Mathematics\Probability and Statistics\Coursera_RProgramming\Quizes)
setwd(X:\Courses\Mathematics\Probability and Statistics\Coursera_RProgramming\Quizes)
setwd("X:\Courses\Mathematics\Probability and Statistics\Coursera_RProgramming\Quizes")
setwd("X:/Courses/Mathematics/Probability and Statistics/Coursera_RProgramming/Quizes")
read.csv("hw1_data.csv")
ls()
hw1 = read.csv("hw1_data.csv")
names(hw1)
head(hw1,2)
tail(hw1,2)
table(hw1$Ozone)
table(hw1$Ozone,47)
?table
oz = table(hw1$Ozone)
oz
length(oz)
class(oz)
oz[47]
oz(47)
oz = c(table(hw1$Ozone))
oz
class(oz)
oz(47)
oz[47]
oz[[47]]
hw1[1,71]
hw1[71,1]
hw1[47,1]
hw1na = is.na(hw1)
oz_na = is.na(hw1(,1))
oz_na = is.na(hw1(1,1))
oz = c(hw1(,1))
oz = c(hw1[(,1])
oz = c(hw1[,1])
oz_na = is.na(oz)
length(oz)
sum(oz.na)
sum(oz_na)
summary(hw1)
oz2 = hw1[which(hw1$Ozone>31 & hw1$Temp>90)]
oz2 = hw1[which(hw1$Ozone>31 & hw1$Temp>90),]
oz2
mean(oz2$Solar.R)
oz3 = hw1[which(hw1$Month=6),]
oz3 = hw1[which(hw1$Month==6),]
oz3
mean(oz3$Temp)
ozMay = hw1[which(hw1$Month==5),]
ozMay
mean(ozMay$Ozone)
max(ozMay$Ozone)
max(ozMay$Wind)
max(ozMay$Ozone,na.rm=T)
